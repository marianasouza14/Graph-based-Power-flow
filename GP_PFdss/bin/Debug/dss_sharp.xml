<?xml version="1.0"?>
<doc>
    <assembly>
        <name>dss_sharp</name>
    </assembly>
    <members>
        <member name="T:dss_sharp.native.DSS_CAPI">
             <summary>
             The DSS_CAPI static class exposes DSS C-API functions to C#.
             DSS C-API is the library from DSS-Extensions that implements the 
             (customized, not supported by EPRI, etc.) OpenDSS engine and wraps
             it in easily consumable C-compatible functions.
            
             Some functions in this class are not exposed through the traditional
             API classes, but advanced users are free to use them.
             </summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssVI">
            <summary>Monitor records Voltage and Current at the terminal (Default)</summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssPower">
            <summary>Monitor records kW, kvar or kVA, angle values, etc. at the terminal to which it is connected.</summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssTaps">
            <summary>For monitoring Regulator and Transformer taps</summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssStates">
            <summary>For monitoring State Variables (for PC Elements only)</summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssSequence">
            <summary>Reports the monitored quantities as sequence quantities</summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssMagnitude">
            <summary>Reports the monitored quantities in Magnitude Only</summary>
        </member>
        <member name="F:dss_sharp.MonitorModes.dssPosOnly">
            <summary>Reports the Positive Seq only or avg of all phases</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssSnapShot">
            <summary>Solve a single snapshot power flow</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssDaily">
            <summary>Solve following Daily load shapes</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssYearly">
            <summary>Solve following Yearly load shapes</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssMonte1">
            <summary>Monte Carlo Mode 1</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssLD1">
            <summary>Load-duration Mode 1</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssPeakDay">
            <summary>Solves for Peak Day using Daily load curve</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssDutyCycle">
            <summary>Solve following Duty Cycle load shapes</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssDirect">
            <summary>Solve direct (forced admittance model)</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssMonteFault">
            <summary>Monte carlo Fault Study</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssFaultStudy">
            <summary>Fault study at all buses</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssMonte2">
            <summary>Monte Carlo Mode 2</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssMonte3">
            <summary>Monte Carlo Mode 3</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssLD2">
            <summary>Load-Duration Mode 2</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssAutoAdd">
            <summary>Auto add generators or capacitors</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssDynamic">
            <summary>Solve for dynamics</summary>
        </member>
        <member name="F:dss_sharp.SolveModes.dssHarmonic">
            <summary>Harmonic solution mode</summary>
        </member>
        <member name="F:dss_sharp.CapControlModes.dssCapControlCurrent">
            <summary>Current control, ON and OFF settings on CT secondary</summary>
        </member>
        <member name="F:dss_sharp.CapControlModes.dssCapControlVoltage">
            <summary>Voltage control, ON and OFF settings on the PT secondary base</summary>
        </member>
        <member name="F:dss_sharp.CapControlModes.dssCapControlKVAR">
            <summary>kVAR control, ON and OFF settings on PT / CT base</summary>
        </member>
        <member name="F:dss_sharp.CapControlModes.dssCapControlTime">
            <summary>Time control, ON and OFF settings are seconds from midnight</summary>
        </member>
        <member name="F:dss_sharp.CapControlModes.dssCapControlPF">
            <summary>ON and OFF settings are power factor, negative for leading</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionNone">
            <summary>No action</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionOpen">
            <summary>Open a switch</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionClose">
            <summary>Close a switch</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionReset">
            <summary>Reset to the shelf state (unlocked, closed for a switch)</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionLock">
            <summary>Lock a switch, preventing both manual and automatic operation</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionUnlock">
            <summary>Unlock a switch, permitting both manual and automatic operation</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionTapUp">
            <summary>Move a regulator tap up</summary>
        </member>
        <member name="F:dss_sharp.ActionCodes.dssActionTapDown">
            <summary>Move a regulator tap down</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsNone">
            <summary>No line length unit.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsMiles">
            <summary>Line length units in miles.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitskFt">
            <summary>Line length units are in thousand feet.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitskm">
            <summary>Line length units are km.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsmeter">
            <summary>Line length units are meters.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsft">
            <summary>Line units in feet.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsinch">
            <summary>Line length units are inches.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitscm">
            <summary>Line units are cm.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsmm">
            <summary>Line length units are mm.</summary>
        </member>
        <member name="F:dss_sharp.LineUnits.dssLineUnitsMaxnum">
            <summary>Maximum number of line units constants.</summary>
        </member>
        <member name="F:dss_sharp.SolutionLoadModels.PowerFlow">
            <summary>Power Flow load model option</summary>
        </member>
        <member name="F:dss_sharp.SolutionLoadModels.Admittance">
            <summary>Admittance load model option</summary>
        </member>
        <member name="F:dss_sharp.SolutionAlgorithms.NormalSolve">
            <summary>Solution algorithm option - Normal solution mode</summary>
        </member>
        <member name="F:dss_sharp.SolutionAlgorithms.NewtonSolve">
            <summary>Solution algorithm option - Newton solution</summary>
        </member>
        <member name="F:dss_sharp.ControlModes.Static">
            <summary>Control Mode option - Static)</summary>
        </member>
        <member name="F:dss_sharp.ControlModes.Event">
            <summary>Control Mode Option - Event driven solution mode)</summary> 
        </member>
        <member name="F:dss_sharp.ControlModes.Time">
            <summary>Control mode option - Time driven mode)</summary> 
        </member>
        <member name="F:dss_sharp.ControlModes.Multirate">
            <summary>Control mode option - Multirate mode)</summary>
        </member>
        <member name="F:dss_sharp.ControlModes.ControlOff">
            <summary>Control Mode OFF)</summary>
        </member>
        <member name="F:dss_sharp.CktModels.Multiphase">
            <summary>Circuit model is multiphase (default)</summary>
        </member>
        <member name="F:dss_sharp.CktModels.PositiveSeq">
            <summary>Circuit model is positive sequence model only</summary>
        </member>
        <member name="F:dss_sharp.AutoAddTypes.AddGen">
            <summary>Add generators in AutoAdd mode</summary>
        </member>
        <member name="F:dss_sharp.AutoAddTypes.AddCap">
            <summary>Add capacitors in AutoAdd mode</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.Full">
            <summary>Return all properties, regardless of order or if the property was filled by the user</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.SkipRedundant">
            <summary>Skip redundant properties</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.EnumAsInt">
            <summary>Return enums as integers instead of strings</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.FullNames">
            <summary>Use full names for the elements, including the class name</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.Pretty">
            <summary>Try to "pretty" format the JSON output</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.ExcludeDisabled">
            <summary>Exclude disabled elements (only valid when exporting a collection)</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.SkipDSSClass">
            <summary>Do not add the "DSSClass" property to the output</summary>
        </member>
        <member name="F:dss_sharp.DSSJSONFlags.LowercaseKeys">
            <summary>Use lowercase representation for the property names (and other keys) instead of the internal variants.</summary>
        </member>
        <member name="F:dss_sharp.SolverOptions.ReuseNothing">
            <summary>Default mode, rebuilding everything</summary>
        </member>
        <member name="F:dss_sharp.SolverOptions.ReuseCompressedMatrix">
            <summary>Reuse only the prepared CSC matrix</summary>
        </member>
        <member name="F:dss_sharp.SolverOptions.ReuseSymbolicFactorization">
            <summary>Reuse the symbolic factorization, implies ReuseCompressedMatrix</summary>
        </member>
        <member name="F:dss_sharp.SolverOptions.ReuseNumericFactorization">
            <summary>Reuse the numeric factorization, implies ReuseSymbolicFactorization</summary>
        </member>
        <member name="F:dss_sharp.SolverOptions.AlwaysResetYPrimInvalid">
            <summary>Bit flag, see CktElement.pas</summary>
        </member>
        <member name="F:dss_sharp.DSSCompatFlags.NoSolverFloatChecks">
            <summary>
            If enabled, don't check for NaNs in the inner solution loop. 
            This can lead to various errors. 
            This flag is useful for legacy applications that don't handle OpenDSS API errors properly.
            Through the development of DSS-Extensions, we noticed this is actually a quite common issue.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSCompatFlags.BadPrecision">
            <summary>
            If enabled, toggle worse precision for certain aspects of the engine. For example, the sequence-to-phase 
            (`As2p`) and sequence-to-phase (`Ap2s`) transform matrices. On DSS C-API, we fill the matrix explicitly
            using higher precision, while numerical inversion of an initially worse precision matrix is used in the 
            official OpenDSS. We will introduce better precision for other aspects of the engine in the future, 
            so this flag can be used to toggle the old/bad values where feasible.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSCompatFlags.InvControl9611">
            <summary>
            Toggle some InvControl behavior introduced in OpenDSS 9.6.1.1. It could be a regression 
            but needs further investigation, so we added this flag in the time being.
            </summary>
        </member>
        <member name="F:dss_sharp.DSSCompatFlags.SaveCalcVoltageBases">
            <summary>
            When using "save circuit", the official OpenDSS always includes the "CalcVoltageBases" command in the
            saved script. We found that it is not always a good idea, so we removed the command (leaving it commented).
            Use this flag to enable the command in the saved script.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.AllPCEatBus">
            <summary>
            Returns an array with the names of all PCE connected to the active bus
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.AllPDEatBus">
            <summary>
            Returns an array with the names of all PDE connected to the active bus
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Coorddefined">
            <summary>
            Indicates whether a coordinate has been defined for this bus
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.CplxSeqVoltages">
            <summary>
            Complex Double array of Sequence Voltages (0, 1, 2) at this Bus.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Cust_Duration">
            <summary>
            Accumulated customer outage durations
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Cust_Interrupts">
            <summary>
            Annual number of customer-interruptions from this bus
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Distance">
            <summary>
            Distance from energymeter (if non-zero)
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Int_Duration">
            <summary>
            Average interruption duration, hr.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Isc">
            <summary>
            Short circuit currents at bus; Complex Array.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Lambda">
            <summary>
            Accumulated failure rate downstream from this bus; faults per year
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.N_Customers">
            <summary>
            Total numbers of customers served downline from this bus
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.N_interrupts">
            <summary>
            Number of interruptions this bus per year
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Name">
            <summary>
            Name of Bus
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Nodes">
            <summary>
            Integer Array of Node Numbers defined at the bus in same order as the voltages.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.NumNodes">
            <summary>
            Number of Nodes this bus.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.SectionID">
            <summary>
            Integer ID of the feeder section in which this bus is located.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.SeqVoltages">
            <summary>
            Double Array of sequence voltages at this bus. Magnitudes only.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.TotalMiles">
            <summary>
            Total length of line downline from this bus, in miles. For recloser siting algorithm.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.VLL">
            <summary>
            For 2- and 3-phase buses, returns array of complex numbers represetin L-L voltages in volts. Returns -1.0 for 1-phase bus. If more than 3 phases, returns only first 3.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.VMagAngle">
            <summary>
            Array of doubles containing voltages in Magnitude (VLN), angle (degrees)
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Voc">
            <summary>
            Open circuit voltage; Complex array.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Voltages">
            <summary>
            Complex array of voltages at this bus.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.YscMatrix">
            <summary>
            Complex array of Ysc matrix at bus. Column by column.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Zsc0">
            <summary>
            Complex Zero-Sequence short circuit impedance at bus.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.Zsc1">
            <summary>
            Complex Positive-Sequence short circuit impedance at bus.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.ZscMatrix">
            <summary>
            Complex array of Zsc matrix at bus. Column by column.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.kVBase">
            <summary>
            Base voltage at bus in kV
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.puVLL">
            <summary>
            Returns Complex array of pu L-L voltages for 2- and 3-phase buses. Returns -1.0 for 1-phase bus. If more than 3 phases, returns only 3 phases.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.puVmagAngle">
            <summary>
            Array of doubles containing voltage magnitude, angle (degrees) pairs in per unit
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.puVoltages">
            <summary>
            Complex Array of pu voltages at the bus.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.ZSC012Matrix">
            <summary>
            Array of doubles (complex) containing the complete 012 Zsc matrix. 
            Only available after Zsc is computed, either through the "ZscRefresh" command, or running a "FaultStudy" solution.
            Only available for buses with 3 nodes.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.x">
            <summary>
            X Coordinate for bus (double)
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.y">
            <summary>
            Y coordinate for bus(double)
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.LoadList">
            <summary>
            List of strings: Full Names of LOAD elements connected to the active bus.
            </summary>
        </member>
        <member name="P:dss_sharp.Bus.LineList">
            <summary>
            List of strings: Full Names of LINE elements connected to the active bus.
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.AllNames">
            <summary>
            Array of strings with all CNData names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.Count">
            <summary>
            Number of CNData objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.First">
            <summary>
            Sets the first CNData active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.Name">
            <summary>
            Sets the active CNData by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.Next">
            <summary>
            Sets the next CNData active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.idx">
            <summary>
            Get/set active CNData by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.EmergAmps">
            <summary>
            Emergency ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.CNData.NormAmps">
            <summary>
            Normal Ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.AllNames">
            <summary>
            Array of strings with all Capacitor names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.Count">
            <summary>
            Number of Capacitor objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.First">
            <summary>
            Sets the first Capacitor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.Name">
            <summary>
            Sets the active Capacitor by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.Next">
            <summary>
            Sets the next Capacitor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.idx">
            <summary>
            Get/set active Capacitor by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.AvailableSteps">
            <summary>
            Number of Steps available in cap bank to be switched ON.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.IsDelta">
            <summary>
            Delta connection or wye?
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.NumSteps">
            <summary>
            Number of steps (default 1) for distributing and switching the total bank kVAR.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.States">
            <summary>
            A array of  integer [0..numsteps-1] indicating state of each step. If the read value is -1 an error has occurred.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.kV">
            <summary>
            Bank kV rating. Use LL for 2 or 3 phases, or actual can rating for 1 phase.
            </summary>
        </member>
        <member name="P:dss_sharp.Capacitors.kvar">
            <summary>
            Total bank KVAR, distributed equally among phases and steps.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.Variable(System.String,System.Int32@)">
            <summary>
            Value as return and error code in Code parameter. For PCElement, get the value of a variable by name. If Code>0 then no variable by this name or not a PCelement.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.Variablei(System.Int32,System.Int32@)">
            <summary>
            Value as return and error code in Code parameter. For PCElement, get the value of a variable by integer index. If Code>0 then no variable by this index or not a PCelement.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.VariableByIndex(System.Int32,System.Int32@)">
            <summary>
            Value as return and error code in Code parameter. For PCElement, get the value of a variable by integer index. If Code>0 then no variable by this index or not a PCelement.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.VariableByName(System.String,System.Int32@)">
            <summary>
            Value as return and error code in Code parameter. For PCElement, get the value of a variable by name. If Code>0 then no variable by this name or not a PCelement.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.VariableByIndex(System.Int32,System.Int32@,System.Double)">
            <summary>
            Set the Value of a variable by indx if a PCElement. If Code>0 then no variable by this index or not a PCelement.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.VariableByName(System.String,System.Int32@,System.Double)">
            <summary>
            Set the Value of a variable by name if a PCElement. If Code>0 then no variable by this name or not a PCelement.
            </summary>
        </member>
        <member name="M:dss_sharp.CktElement.Controller(System.Int32)">
            <summary>
            Full name of the i-th controller attached to this element. Ex: str = Controller(2).  See NumControls to determine valid index range
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.AllPropertyNames">
            <summary>
            Array containing all property names of the active device.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.AllVariableNames">
            <summary>
            Array of strings listing all the published state variable names.
            Valid only for PCElements.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.AllVariableValues">
            <summary>
            Array of doubles. Values of state variables of active element if PC element.
            Valid only for PCElements.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.BusNames">
            <summary>
            Array of strings. Get  Bus definitions to which each terminal is connected.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.CplxSeqCurrents">
            <summary>
            Complex double array of Sequence Currents for all conductors of all terminals of active circuit element.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.CplxSeqVoltages">
            <summary>
            Complex double array of Sequence Voltage for all terminals of active circuit element.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Currents">
            <summary>
            Complex array of currents into each conductor of each terminal
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.CurrentsMagAng">
            <summary>
            Currents in magnitude, angle (degrees) format as a array of doubles.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.DisplayName">
            <summary>
            Display name of the object (not necessarily unique)
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.EmergAmps">
            <summary>
            Emergency Ampere Rating for PD elements
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Enabled">
            <summary>
            Boolean indicating that element is currently in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.EnergyMeter">
            <summary>
            Name of the Energy Meter this element is assigned to.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.GUID">
            <summary>
            globally unique identifier for this object
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Handle">
            <summary>
            Pointer to this object
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.HasOCPDevice">
            <summary>
            True if a recloser, relay, or fuse controlling this ckt element. OCP = Overcurrent Protection
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.HasSwitchControl">
            <summary>
            This element has a SwtControl attached.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.HasVoltControl">
            <summary>
            This element has a CapControl or RegControl attached.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Losses">
            <summary>
            Total losses in the element: two-element double array (complex), in VA (watts, vars)
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Name">
            <summary>
            Full Name of Active Circuit Element
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NodeOrder">
            <summary>
            Array of integer containing the node numbers (representing phases, for example) for each conductor of each terminal.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NormalAmps">
            <summary>
            Normal ampere rating for PD Elements
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NumConductors">
            <summary>
            Number of Conductors per Terminal
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NumControls">
            <summary>
            Number of controls connected to this device. 
            Use to determine valid range for index into Controller array.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NumPhases">
            <summary>
            Number of Phases
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NumProperties">
            <summary>
            Number of Properties this Circuit Element.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NumTerminals">
            <summary>
            Number of Terminals this Circuit Element
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.OCPDevIndex">
            <summary>
            Index into Controller list of OCP Device controlling this CktElement
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.OCPDevType">
            <summary>
            0=None; 1=Fuse; 2=Recloser; 3=Relay;  Type of OCP controller device
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.PhaseLosses">
            <summary>
            Complex array of losses (kVA) by phase
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Powers">
            <summary>
            Complex array of powers (kVA) into each conductor of each terminal
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Residuals">
            <summary>
            Residual currents for each terminal: (magnitude, angle in degrees)
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.SeqCurrents">
            <summary>
            Double array of symmetrical component currents (magnitudes only) into each 3-phase terminal
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.SeqPowers">
            <summary>
            Complex array of sequence powers (kW, kvar) into each 3-phase teminal
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.SeqVoltages">
            <summary>
            Double array of symmetrical component voltages (magnitudes only) at each 3-phase terminal
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Voltages">
            <summary>
            Complex array of voltages at terminals
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.VoltagesMagAng">
            <summary>
            Voltages at each conductor in magnitude, angle form as array of doubles.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.Yprim">
            <summary>
            YPrim matrix, column order, complex numbers
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.IsIsolated">
            <summary>
            Returns true if the current active element is isolated.
            Note that this only fetches the current value. See also the Topology interface.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.TotalPowers">
            <summary>
            Returns an array with the total powers (complex, kVA) at ALL terminals of the active circuit element.
            </summary>
        </member>
        <member name="P:dss_sharp.CktElement.NodeRef">
            <summary>
            Array of integers, a copy of the internal NodeRef of the CktElement.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.AllNames">
            <summary>
            Array of strings with all Generator names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Count">
            <summary>
            Number of Generator objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.First">
            <summary>
            Sets the first Generator active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Name">
            <summary>
            Sets the active Generator by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Next">
            <summary>
            Sets the next Generator active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.idx">
            <summary>
            Get/set active Generator by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.ForcedON">
            <summary>
            Indicates whether the generator is forced ON regardles of other dispatch criteria.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Model">
            <summary>
            Generator Model
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.PF">
            <summary>
            Power factor (pos. = producing vars). Updates kvar based on present kW value.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Phases">
            <summary>
            Number of phases
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.RegisterNames">
            <summary>
            Array of Names of all generator energy meter registers
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.RegisterValues">
            <summary>
            Array of valus in generator energy meter registers.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Vmaxpu">
            <summary>
            Vmaxpu for generator model
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Vminpu">
            <summary>
            Vminpu for Generator model
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.kV">
            <summary>
            Voltage base for the active generator, kV
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.kVArated">
            <summary>
            kVA rating of the generator
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.kW">
            <summary>
            kW output for the active generator. kvar is updated for current power factor.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.kvar">
            <summary>
            kvar output for the active generator. Updates power factor based on present kW value.
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.daily">
            <summary>
            Name of the loadshape for a daily generation profile.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.duty">
            <summary>
            Name of the loadshape for a duty cycle simulation.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Yearly">
            <summary>
            Name of yearly loadshape
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Status">
            <summary>
            Response to dispatch multipliers: Fixed=1 (dispatch multipliers do not apply), Variable=0 (follows curves).
            
            Related enumeration: GeneratorStatus
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.IsDelta">
            <summary>
            Generator connection. True/1 if delta connection, False/0 if wye.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.kva">
            <summary>
            kVA rating of electrical machine. Applied to machine or inverter definition for Dynamics mode solutions.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Class">
            <summary>
            An arbitrary integer number representing the class of Generator so that Generator values may be segregated by class.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Generators.Bus1">
            <summary>
            Bus to which the Generator is connected. May include specific node specification.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.AllNames">
            <summary>
            Array of strings with all Line names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Count">
            <summary>
            Number of Line objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.First">
            <summary>
            Sets the first Line active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Name">
            <summary>
            Sets the active Line by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Next">
            <summary>
            Sets the next Line active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.idx">
            <summary>
            Get/set active Line by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Bus1">
            <summary>
            Name of bus for terminal 1.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Bus2">
            <summary>
            Name of bus for terminal 2.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.C0">
            <summary>
            Zero Sequence capacitance, nanofarads per unit length.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.C1">
            <summary>
            Positive Sequence capacitance, nanofarads per unit length.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.EmergAmps">
            <summary>
            Emergency (maximum) ampere rating of Line.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Geometry">
            <summary>
            Line geometry code
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Length">
            <summary>
            Length of line section in units compatible with the LineCode definition.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.LineCode">
            <summary>
            Name of LineCode object that defines the impedances.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.NormAmps">
            <summary>
            Normal ampere rating of Line.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.NumCust">
            <summary>
            Number of customers on this line section.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Parent">
            <summary>
            Sets Parent of the active Line to be the active line. Returns 0 if no parent or action fails.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Phases">
            <summary>
            Number of Phases, this Line element.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.R0">
            <summary>
            Zero Sequence resistance, ohms per unit length.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.R1">
            <summary>
            Positive Sequence resistance, ohms per unit length.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Rg">
            <summary>
            Earth return resistance value used to compute line impedances at power frequency
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Rho">
            <summary>
            Earth Resistivity, m-ohms
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Rmatrix">
            <summary>
            Resistance matrix (full), ohms per unit length. Array of doubles.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Spacing">
            <summary>
            Line spacing code
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.TotalCust">
            <summary>
            Total Number of customers served from this line section.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.X0">
            <summary>
            Zero Sequence reactance ohms per unit length.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.X1">
            <summary>
            Positive Sequence reactance, ohms per unit length.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Xg">
            <summary>
            Earth return reactance value used to compute line impedances at power frequency
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Xmatrix">
            <summary>
            Reactance matrix (full), ohms per unit length. Array of doubles.
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.Yprim">
            <summary>
            Yprimitive for the active line object (complex array).
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.SeasonRating">
            <summary>
            Delivers the rating for the current season (in Amps)  if the "SeasonalRatings" option is active
            </summary>
        </member>
        <member name="P:dss_sharp.Lines.IsSwitch">
            <summary>
            Sets/gets the Line element switch status. Setting it has side-effects to the line parameters.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.AllowDuplicates">
            <summary>
            {True | False*} Designates whether to allow duplicate names of objects
            
            **NOTE**: for DSS-Extensions, we are considering removing this option in a future 
            release since it has performance impacts even when not used.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.AutoBusList">
            <summary>
            List of Buses or (File=xxxx) syntax for the AutoAdd solution mode.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.CktModel">
            <summary>
            {dssMultiphase (0) * | dssPositiveSeq (1) } Indicate if the circuit model is positive sequence.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.ControlTrace">
            <summary>
            {True | False*} Denotes whether to trace the control actions to a file.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.EmergVmaxpu">
            <summary>
            Per Unit maximum voltage for Emergency conditions.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.EmergVminpu">
            <summary>
            Per Unit minimum voltage for Emergency conditions.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.LossRegs">
            <summary>
            Integer array defining which energy meter registers to use for computing losses
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.LossWeight">
            <summary>
            Weighting factor applied to Loss register values.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.NormVmaxpu">
            <summary>
            Per Unit maximum voltage for Normal conditions.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.NormVminpu">
            <summary>
            Per Unit minimum voltage for Normal conditions.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.PriceCurve">
            <summary>
            Name of LoadShape object that serves as the source of price signal data for yearly simulations, etc.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.PriceSignal">
            <summary>
            Price Signal for the Circuit
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.Trapezoidal">
            <summary>
            Gets value of trapezoidal integration flag in energy meters. Defaults to false.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.UEregs">
            <summary>
            Array of Integers defining energy meter registers to use for computing UE
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.UEweight">
            <summary>
            Weighting factor applied to UE register values.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.VoltageBases">
            <summary>
            Array of doubles defining the legal voltage bases in kV L-L
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.ZoneLock">
            <summary>
            {True | False*}  Locks Zones on energy meters to prevent rebuilding if a circuit change occurs.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.AllocationFactors">
            <summary>
            (write-only) Sets all load allocation factors for all loads defined by XFKVA property to this value.
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.LoadsTerminalCheck">
            <summary>
            Controls whether the terminals are checked when updating the currents in Load component. Defaults to true.
            If the loads are guaranteed to have their terminals closed throughout the simulation, this can be set to false to save some time.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Settings.IterateDisabled">
            <summary>
            Controls whether `First`/`Next` iteration includes or skips disabled circuit elements.
            The default behavior from OpenDSS is to skip those. The user can still activate the element by name or index.
            
            The default value for IterateDisabled is 0, keeping the original behavior.
            Set it to 1 (or `True`) to include disabled elements.
            Other numeric values are reserved for other potential behaviors.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.ActiveClassName">
            <summary>
            Returns name of active class.
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.AllNames">
            <summary>
            Array of strings consisting of all element names in the active class.
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.Count">
            <summary>
            Number of elements in Active Class. Same as NumElements Property.
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.First">
            <summary>
            Sets first element in the active class to be the active DSS object. If object is a CktElement, ActiveCktELment also points to this element. Returns 0 if none.
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.Name">
            <summary>
            Name of the Active Element of the Active Class
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.Next">
            <summary>
            Sets next element in active class to be the active DSS object. If object is a CktElement, ActiveCktElement also points to this element.  Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.NumElements">
            <summary>
            Number of elements in this class. Same as Count property.
            </summary>
        </member>
        <member name="P:dss_sharp.ActiveClass.ActiveClassParent">
            <summary>
            Get the name of the parent class of the active class
            </summary>
        </member>
        <member name="M:dss_sharp.ActiveClass.ToJSON(dss_sharp.DSSJSONFlags)">
            <summary>
            Returns the data (as a list) of all elements from the active class as a JSON-encoded string.
            
            The `options` parameter contains bit-flags to toggle specific features.
            See `Obj_ToJSON` (C-API) for more.
            
            Additionally, the `ExcludeDisabled` flag can be used to excluded disabled elements from the output.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.AllNames">
            <summary>
            Array of strings with all CapControl names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Count">
            <summary>
            Number of CapControl objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.First">
            <summary>
            Sets the first CapControl active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Name">
            <summary>
            Sets the active CapControl by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Next">
            <summary>
            Sets the next CapControl active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.idx">
            <summary>
            Get/set active CapControl by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.CTratio">
            <summary>
            Transducer ratio from pirmary current to control current.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Capacitor">
            <summary>
            Name of the Capacitor that is controlled.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Delay">
            <summary>
            Time delay [s] to switch on after arming.  Control may reset before actually switching.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.DelayOff">
            <summary>
            Time delay [s] before switching off a step. Control may reset before actually switching.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Mode">
            <summary>
            Type of automatic controller.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.MonitoredObj">
            <summary>
            Full name of the element that PT and CT are connected to.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.MonitoredTerm">
            <summary>
            Terminal number on the element that PT and CT are connected to.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.OFFSetting">
            <summary>
            Threshold to switch off a step. See Mode for units.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.ONSetting">
            <summary>
            Threshold to arm or switch on a step.  See Mode for units.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.PTratio">
            <summary>
            Transducer ratio from primary feeder to control voltage.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.UseVoltOverride">
            <summary>
            Enables Vmin and Vmax to override the control Mode
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Vmax">
            <summary>
            With VoltOverride, swtich off whenever PT voltage exceeds this level.
            </summary>
        </member>
        <member name="P:dss_sharp.CapControls.Vmin">
            <summary>
            With VoltOverride, switch ON whenever PT voltage drops below this level.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.get_Buses(System.Int32)">
            <summary>
            Activates and returns a bus by its (zero-based) index.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.get_Buses(System.String)">
            <summary>
            Activates and returns a bus by its name.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.get_CktElements(System.Int32)">
            <summary>
            Activates and returns a CktElement by its global (zero-based) index.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.get_CktElements(System.String)">
            <summary>
            Activates and returns a CktElement by its full name (e.g. "load.abc").
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.AllNodeDistancesByPhase(System.Int32)">
            <summary>
            Returns an array of doubles representing the distances to parent EnergyMeter. Sequence of array corresponds to other node ByPhase properties.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.AllNodeNamesByPhase(System.Int32)">
            <summary>
            Return array of strings of the node names for the By Phase criteria. Sequence corresponds to other ByPhase properties.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.AllNodeVmagByPhase(System.Int32)">
            <summary>
            Returns Array of doubles represent voltage magnitudes for nodes on the specified phase.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.AllNodeVmagPUByPhase(System.Int32)">
            <summary>
            Returns array of per unit voltage magnitudes for each node by phase
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllBusDistances">
            <summary>
            Returns distance from each bus to parent EnergyMeter. Corresponds to sequence in AllBusNames.
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllBusNames">
            <summary>
            Array of strings containing names of all buses in circuit (see AllNodeNames).
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllBusVmag">
            <summary>
            Array of magnitudes (doubles) of voltages at all buses
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllBusVmagPu">
            <summary>
            Double Array of all bus voltages (each node) magnitudes in Per unit
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllBusVolts">
            <summary>
            Complex array of all bus, node voltages from most recent solution
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllElementLosses">
            <summary>
            Array of total losses (complex) in each circuit element
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllElementNames">
            <summary>
            Array of strings containing Full Name of all elements.
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllNodeDistances">
            <summary>
            Returns an array of distances from parent EnergyMeter for each Node. Corresponds to AllBusVMag sequence.
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.AllNodeNames">
            <summary>
            Array of strings containing full name of each node in system in same order as returned by AllBusVolts, etc.
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.LineLosses">
            <summary>
            Complex total line losses in the circuit
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.Losses">
            <summary>
            Total losses in active circuit, complex number (two-element array of double).
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.Name">
            <summary>
            Name of the active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.NumBuses">
            <summary>
            Total number of Buses in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.NumCktElements">
            <summary>
            Number of CktElements in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.NumNodes">
            <summary>
            Total number of nodes in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.ParentPDElement">
            <summary>
            Sets Parent PD element, if any, to be the active circuit element and returns index>0; Returns 0 if it fails or not applicable.
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.SubstationLosses">
            <summary>
            Complex losses in all transformers designated to substations.
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.SystemY">
            <summary>
            System Y matrix (after a solution has been performed). 
            This is deprecated as it returns a dense matrix. Only use it for small systems.
            For large-scale systems, prefer YMatrix.GetCompressedYMatrix.
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.TotalPower">
            <summary>
            Total power (complex), kVA delivered to the circuit
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.YCurrents">
            <summary>
            Array of doubles containing complex injection currents for the present solution. Is is the "I" vector of I=YV
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.YNodeOrder">
            <summary>
            Array of strings containing the names of the nodes in the same order as the Y matrix
            </summary>
        </member>
        <member name="P:dss_sharp.Circuit.YNodeVarray">
            <summary>
            Complex array of actual node voltages in same order as SystemY matrix.
            </summary>
        </member>
        <member name="M:dss_sharp.Circuit.ElementLosses(System.Int32[])">
            <summary>
            Array of total losses (complex) in a selection of elements.
            Use the element indices (starting at 1) as parameter.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.ActionCode">
            <summary>
            Code for the active action. Long integer code to tell the control device what to do
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.DeviceHandle">
            <summary>
            Handle (User defined) to device that must act on the pending action.
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.NumActions">
            <summary>
            Number of Actions on the current actionlist (that have been popped off the control queue by CheckControlActions)
            </summary>
        </member>
        <member name="M:dss_sharp.CtrlQueue.Push(System.Int32,System.Double,System.Int32,System.Int32)">
            <summary>
            Push a control action onto the DSS control queue by time, action code, and device handle (user defined). Returns Control Queue handle.
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.PopAction">
            <summary>
            Pops next action off the action list and makes it the active action. Returns zero if none.
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.Queue">
            <summary>
            Array of strings containing the entire queue in CSV format
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.QueueSize">
            <summary>
            Number of items on the OpenDSS control Queue
            </summary>
        </member>
        <member name="P:dss_sharp.CtrlQueue.Action">
            <summary>
            (write-only) Set the active action by index
            </summary>
        </member>
        <member name="P:dss_sharp.DSSElement.AllPropertyNames">
            <summary>
            Array of strings containing the names of all properties for the active DSS object.
            </summary>
        </member>
        <member name="P:dss_sharp.DSSElement.Name">
            <summary>
            Full Name of Active DSS Object (general element or circuit element).
            </summary>
        </member>
        <member name="P:dss_sharp.DSSElement.NumProperties">
            <summary>
            Number of Properties for the active DSS object.
            </summary>
        </member>
        <member name="M:dss_sharp.DSSElement.ToJSON(dss_sharp.DSSJSONFlags)">
            <summary>
            Returns the properties of the active DSS object as a JSON-encoded string.
            
            The `options` parameter contains bit-flags to toggle specific features.
            See `Obj_ToJSON` (C-API) for more.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.DSSProgress.Caption">
            <summary>
            (write-only) Caption to appear on the bottom of the DSS Progress form.
            </summary>
        </member>
        <member name="P:dss_sharp.DSSProgress.PctProgress">
            <summary>
            (write-only) Percent progress to indicate [0..100]
            </summary>
        </member>
        <member name="P:dss_sharp.DSSProperty.Description">
            <summary>
            Description of the property.
            </summary>
        </member>
        <member name="P:dss_sharp.DSSProperty.Name">
            <summary>
            Name of Property
            </summary>
        </member>
        <member name="M:dss_sharp.DSS_Executive.Command(System.Int32)">
            <summary>
            Get i-th command
            </summary>
        </member>
        <member name="M:dss_sharp.DSS_Executive.CommandHelp(System.Int32)">
            <summary>
            Get help string for i-th command
            </summary>
        </member>
        <member name="M:dss_sharp.DSS_Executive.Option(System.Int32)">
            <summary>
            Get i-th option
            </summary>
        </member>
        <member name="M:dss_sharp.DSS_Executive.OptionHelp(System.Int32)">
            <summary>
            Get help string for i-th option
            </summary>
        </member>
        <member name="M:dss_sharp.DSS_Executive.OptionValue(System.Int32)">
            <summary>
            Get present value of i-th option
            </summary>
        </member>
        <member name="P:dss_sharp.DSS_Executive.NumCommands">
            <summary>
            Number of DSS Executive Commands
            </summary>
        </member>
        <member name="P:dss_sharp.DSS_Executive.NumOptions">
            <summary>
            Number of DSS Executive Options
            </summary>
        </member>
        <member name="P:dss_sharp.Error.Description">
            <summary>
            Description of error for last operation
            </summary>
        </member>
        <member name="P:dss_sharp.Error.Number">
            <summary>
            Error Number (returns current value and then resets to zero)
            </summary>
        </member>
        <member name="P:dss_sharp.Error.EarlyAbort">
            <summary>
            EarlyAbort controls whether all errors halts the DSS script processing (Compile/Redirect), defaults to true.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Error.ExtendedErrors">
            <summary>
            Controls whether the extended error mechanism is used. Defaults to true.
            
            Extended errors are errors derived from checks across the API to ensure
            a valid state. Although many of these checks are already present in the 
            original/official COM interface, the checks do not produce any error 
            message. An error value can be returned by a function but this value
            can, for many of the functions, be a valid value. As such, the user
            has no means to detect an invalid API call. 
            
            Extended errors use the Error interface to provide a more clear message
            and should help users, especially new users, to find usage issues earlier.
            Combined with the automatic exception mapping mechanism (see `UseExceptions`),
            a more modern and safe experience is achieved in dss_sharp.
            
            The current default state is ON. For compatibility, the user can turn it
            off to restore the previous behavior.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Error.UseExceptions">
            <summary>
            UseExceptions controls whether the error numbers from the DSS engine are
            automatically mapped to .NET exceptions. The default and recommended state
            is `true`, but users can disable this to achieve better compatibility with
            old, COM-based code. Note that most code from OpenDSS users "in the wild" 
            do not check for errors, so the exception mapping can unearth hidden errors
            that were being ignored in old code.
            
            NOTE: This is a global, static setting. Affects all DSS instances in the process.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.AllNames">
            <summary>
            Array of strings with all Fuse names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.Count">
            <summary>
            Number of Fuse objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.First">
            <summary>
            Sets the first Fuse active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.Name">
            <summary>
            Sets the active Fuse by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.Next">
            <summary>
            Sets the next Fuse active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.idx">
            <summary>
            Get/set active Fuse by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="M:dss_sharp.Fuses.Close">
            <summary>
            Close all phases of the fuse.
            </summary>
        </member>
        <member name="M:dss_sharp.Fuses.IsBlown">
            <summary>
            Current state of the fuses. TRUE if any fuse on any phase is blown. Else FALSE.
            </summary>
        </member>
        <member name="M:dss_sharp.Fuses.Open">
            <summary>
            Manual opening of all phases of the fuse.
            </summary>
        </member>
        <member name="M:dss_sharp.Fuses.Reset">
            <summary>
            Reset fuse to normal state.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.Delay">
            <summary>
            A fixed delay time in seconds added to the fuse blowing time determined by the TCC curve. Default is 0.
            This represents a fuse clear or other delay.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.MonitoredObj">
            <summary>
            Full name of the circuit element to which the fuse is connected.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.MonitoredTerm">
            <summary>
            Terminal number to which the fuse is connected.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.NumPhases">
            <summary>
            Number of phases, this fuse.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.RatedCurrent">
            <summary>
            Multiplier or actual amps for the TCCcurve object. Defaults to 1.0. 
            Multiply current values of TCC curve by this to get actual amps.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.SwitchedObj">
            <summary>
            Full name of the circuit element switch that the fuse controls. 
            Defaults to the MonitoredObj.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.SwitchedTerm">
            <summary>
            Number of the terminal of the controlled element containing the switch controlled by the fuse.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.TCCcurve">
            <summary>
            Name of the TCCcurve object that determines fuse blowing.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.State">
            <summary>
            Array of strings indicating the state of each phase of the fuse.
            </summary>
        </member>
        <member name="P:dss_sharp.Fuses.NormalState">
            <summary>
            Array of strings indicating the normal state of each phase of the fuse.
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.AllNames">
            <summary>
            Array of strings with all ISource names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.Count">
            <summary>
            Number of ISource objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.First">
            <summary>
            Sets the first ISource active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.Name">
            <summary>
            Sets the active ISource by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.Next">
            <summary>
            Sets the next ISource active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.idx">
            <summary>
            Get/set active ISource by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.Amps">
            <summary>
            Magnitude of the ISource in amps
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.AngleDeg">
            <summary>
            Phase angle for ISource, degrees
            </summary>
        </member>
        <member name="P:dss_sharp.ISources.Frequency">
            <summary>
            The present frequency of the ISource, Hz
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.AllNames">
            <summary>
            Array of strings with all LineCode names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Count">
            <summary>
            Number of LineCode objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.First">
            <summary>
            Sets the first LineCode active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Name">
            <summary>
            Sets the active LineCode by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Next">
            <summary>
            Sets the next LineCode active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.idx">
            <summary>
            Get/set active LineCode by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.C0">
            <summary>
            Zero-sequence capacitance, nF per unit length
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.C1">
            <summary>
            Positive-sequence capacitance, nF per unit length
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Cmatrix">
            <summary>
            Capacitance matrix, nF per unit length
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.EmergAmps">
            <summary>
            Emergency ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.IsZ1Z0">
            <summary>
            Flag denoting whether impedance data were entered in symmetrical components
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.NormAmps">
            <summary>
            Normal Ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Phases">
            <summary>
            Number of Phases
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.R0">
            <summary>
            Zero-Sequence Resistance, ohms per unit length
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.R1">
            <summary>
            Positive-sequence resistance ohms per unit length
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Rmatrix">
            <summary>
            Resistance matrix, ohms per unit length
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.X0">
            <summary>
            Zero Sequence Reactance, Ohms per unit length
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.X1">
            <summary>
            Posiive-sequence reactance, ohms per unit length
            </summary>
        </member>
        <member name="P:dss_sharp.LineCodes.Xmatrix">
            <summary>
            Reactance matrix, ohms per unit length
            </summary>
        </member>
        <member name="M:dss_sharp.Monitors.Channel(System.Int32)">
            <summary>
            Array of float64 for the specified channel (usage: MyArray = DSSMonitor.Channel(i)).
            A Save or SaveAll should be executed first. Done automatically by most standard solution modes.
            Channels start at index 1.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.AllNames">
            <summary>
            Array of strings with all Monitor names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Count">
            <summary>
            Number of Monitor objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.First">
            <summary>
            Sets the first Monitor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Name">
            <summary>
            Sets the active Monitor by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Next">
            <summary>
            Sets the next Monitor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.idx">
            <summary>
            Get/set active Monitor by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.ByteStream">
            <summary>
            Byte Array containing monitor stream values. Make sure a "save" is done first (standard solution modes do this automatically)
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Element">
            <summary>
            Full object name of element being monitored.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.FileName">
            <summary>
            Name of CSV file associated with active Monitor.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.FileVersion">
            <summary>
            Monitor File Version (integer)
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Header">
            <summary>
            Header string;  Array of strings containing Channel names
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Mode">
            <summary>
            Set Monitor mode (bitmask integer - see DSS Help)
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.NumChannels">
            <summary>
            Number of Channels in the active Monitor
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.RecordSize">
            <summary>
            Size of each record in ByteStream (Integer). Same as NumChannels.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.SampleCount">
            <summary>
            Number of Samples in Monitor at Present
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.Terminal">
            <summary>
            Terminal number of element being monitored.
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.dblFreq">
            <summary>
            Array of doubles containing frequency values for harmonics mode solutions; Empty for time mode solutions (use dblHour)
            </summary>
        </member>
        <member name="P:dss_sharp.Monitors.dblHour">
            <summary>
            Array of doubles containing time value in hours for time-sampled monitor values; Empty if frequency-sampled values for harmonics solution (see dblFreq)
            </summary>
        </member>
        <member name="M:dss_sharp.Parser.Matrix(System.Int32)">
            <summary>
            Use this property to parse a Matrix token in OpenDSS format.  Returns square matrix of order specified. Order same as default Fortran order: column by column.
            </summary>
        </member>
        <member name="M:dss_sharp.Parser.SymMatrix(System.Int32)">
            <summary>
            Use this property to parse a matrix token specified in lower triangle form. Symmetry is forced.
            </summary>
        </member>
        <member name="M:dss_sharp.Parser.Vector(System.Int32)">
            <summary>
            Returns token as array of doubles. For parsing quoted array syntax.
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.AutoIncrement">
            <summary>
            Default is FALSE. If TRUE parser automatically advances to next token after DblValue, IntValue, or StrValue. Simpler when you don't need to check for parameter names.
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.BeginQuote">
            <summary>
            Get/Set String containing the the characters for Quoting in OpenDSS scripts. Matching pairs defined in EndQuote. Default is "'([{.
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.CmdString">
            <summary>
            String to be parsed. Loading this string resets the Parser to the beginning of the line. Then parse off the tokens in sequence.
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.DblValue">
            <summary>
            Return next parameter as a double.
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.Delimiters">
            <summary>
            String defining hard delimiters used to separate token on the command string. Default is , and =. The = separates token name from token value. These override whitesspace to separate tokens.
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.EndQuote">
            <summary>
            String containing characters, in order, that match the beginning quote characters in BeginQuote. Default is "')]}
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.IntValue">
            <summary>
            Return next parameter as a long integer.
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.NextParam">
            <summary>
            Get next token and return tag name (before = sign) if any. See AutoIncrement.
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.StrValue">
            <summary>
            Return next parameter as a string
            </summary>
        </member>
        <member name="P:dss_sharp.Parser.WhiteSpace">
            <summary>
            Get/set the characters used for White space in the command string.  Default is blank and Tab.
            </summary>
        </member>
        <member name="P:dss_sharp.ReduceCkt.Zmag">
            <summary>
            Zmag (ohms) for Reduce Option for Z of short lines
            </summary>
        </member>
        <member name="P:dss_sharp.ReduceCkt.KeepLoad">
            <summary>
            Keep load flag (T/F) for Reduction options that remove branches
            </summary>
        </member>
        <member name="P:dss_sharp.ReduceCkt.EditString">
            <summary>
            Edit String for RemoveBranches functions
            </summary>
        </member>
        <member name="P:dss_sharp.ReduceCkt.StartPDElement">
            <summary>
            Start element for Remove Branch function
            </summary>
        </member>
        <member name="P:dss_sharp.ReduceCkt.EnergyMeter">
            <summary>
            Name of Energymeter to use for reduction
            </summary>
        </member>
        <member name="M:dss_sharp.ReduceCkt.SaveCircuit(System.String)">
            <summary>
            Save present (reduced) circuit
            Filename is listed in the Text Result interface
            </summary>
        </member>
        <member name="M:dss_sharp.ReduceCkt.DoDefault">
            <summary>
            Do Default Reduction algorithm
            </summary>
        </member>
        <member name="M:dss_sharp.ReduceCkt.DoShortLines">
            <summary>
            Do ShortLines algorithm: Set Zmag first if you don't want the default
            </summary>
        </member>
        <member name="M:dss_sharp.ReduceCkt.DoDangling">
            <summary>
            Reduce Dangling Algorithm; branches with nothing connected
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.AddType">
            <summary>
            Type of device to add in AutoAdd Mode: {dssGen (Default) | dssCap}
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Algorithm">
            <summary>
            Base Solution algorithm: {dssNormalSolve | dssNewtonSolve}
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Capkvar">
            <summary>
            Capacitor kvar for adding capacitors in AutoAdd mode
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.ControlActionsDone">
            <summary>
            Flag indicating the control actions are done.
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.ControlIterations">
            <summary>
            Value of the control iteration counter
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.ControlMode">
            <summary>
            {dssStatic* | dssEvent | dssTime}  Modes for control devices
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Converged">
            <summary>
            Flag to indicate whether the circuit solution converged
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.DefaultDaily">
            <summary>
            Default daily load shape (defaults to "Default")
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.DefaultYearly">
            <summary>
            Default Yearly load shape (defaults to "Default")
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.EventLog">
            <summary>
            Array of strings containing the Event Log
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Frequency">
            <summary>
            Set the Frequency for next solution
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.GenMult">
            <summary>
            Default Multiplier applied to generators (like LoadMult)
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.GenPF">
            <summary>
            PF for generators in AutoAdd mode
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.GenkW">
            <summary>
            Generator kW for AutoAdd mode
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Hour">
            <summary>
            Set Hour for time series solutions.
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.IntervalHrs">
            <summary>
            Get/Set the Solution.IntervalHrs variable used for devices that integrate / custom solution algorithms
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Iterations">
            <summary>
            Number of iterations taken for last solution. (Same as Totaliterations)
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.LDCurve">
            <summary>
            Load-Duration Curve name for LD modes
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.LoadModel">
            <summary>
            Load Model: {dssPowerFlow (default) | dssAdmittance}
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.LoadMult">
            <summary>
            Default load multiplier applied to all non-fixed loads
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.MaxControlIterations">
            <summary>
            Maximum allowable control iterations
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.MaxIterations">
            <summary>
            Max allowable iterations.
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.MinIterations">
            <summary>
            Minimum number of iterations required for a power flow solution.
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Mode">
            <summary>
            Set present solution mode
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.ModeID">
            <summary>
            ID (text) of the present solution mode
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.MostIterationsDone">
            <summary>
            Max number of iterations required to converge at any control iteration of the most recent solution.
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Number">
            <summary>
            Number of solutions to perform for Monte Carlo and time series simulations
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Process_Time">
            <summary>
            Gets the time required to perform the latest solution (Read only)
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Random">
            <summary>
            Randomization mode for random variables "Gaussian" or "Uniform"
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Seconds">
            <summary>
            Seconds from top of the hour.
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.StepSize">
            <summary>
            Time step size in sec
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.SystemYChanged">
            <summary>
            Flag that indicates if elements of the System Y have been changed by recent activity.
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Time_of_Step">
            <summary>
            Get the solution process time + sample time for time step
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Tolerance">
            <summary>
            Solution convergence tolerance.
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Total_Time">
            <summary>
            Gets/sets the accumulated time of the simulation
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Totaliterations">
            <summary>
            Total iterations including control iterations for most recent solution.
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.Year">
            <summary>
            Set year for planning studies
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.dblHour">
            <summary>
            Hour as a double, including fractional part
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.pctGrowth">
            <summary>
            Percent default  annual load growth rate
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.StepsizeHr">
            <summary>
            (write-only) Set Stepsize in Hr
            </summary>
        </member>
        <member name="P:dss_sharp.Solution.StepsizeMin">
            <summary>
            (write-only) Set Stepsize in minutes
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.AllNames">
            <summary>
            Array of strings with all LineGeometrie names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Count">
            <summary>
            Number of LineGeometrie objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.First">
            <summary>
            Sets the first LineGeometrie active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Name">
            <summary>
            Sets the active LineGeometrie by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Next">
            <summary>
            Sets the next LineGeometrie active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.idx">
            <summary>
            Get/set active LineGeometrie by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Conductors">
            <summary>
            Array of strings with names of all conductors in the active LineGeometry object
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.EmergAmps">
            <summary>
            Emergency ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.NormAmps">
            <summary>
            Normal ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Phases">
            <summary>
            Number of Phases
            </summary>
        </member>
        <member name="M:dss_sharp.LineGeometries.Rmatrix(System.Double,System.Double,System.Int32)">
            <summary>
            Resistance matrix, ohms
            </summary>
        </member>
        <member name="M:dss_sharp.LineGeometries.Xmatrix(System.Double,System.Double,System.Int32)">
            <summary>
            Reactance matrix, ohms
            </summary>
        </member>
        <member name="M:dss_sharp.LineGeometries.Zmatrix(System.Double,System.Double,System.Int32)">
            <summary>
            Complex impedance matrix, ohms
            </summary>
        </member>
        <member name="M:dss_sharp.LineGeometries.Cmatrix(System.Double,System.Double,System.Int32)">
            <summary>
            Capacitance matrix, nF
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Xcoords">
            <summary>
            Get/Set the X (horizontal) coordinates of the conductors
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Ycoords">
            <summary>
            Get/Set the Y (vertical/height) coordinates of the conductors
            </summary>
        </member>
        <member name="P:dss_sharp.LineGeometries.Nconds">
            <summary>
            Number of conductors in this geometry. Default is 3. Triggers memory allocations. Define first!
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.AllNames">
            <summary>
            Array of strings with all LineSpacing names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.Count">
            <summary>
            Number of LineSpacing objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.First">
            <summary>
            Sets the first LineSpacing active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.Name">
            <summary>
            Sets the active LineSpacing by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.Next">
            <summary>
            Sets the next LineSpacing active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.idx">
            <summary>
            Get/set active LineSpacing by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.Phases">
            <summary>
            Number of Phases
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.Xcoords">
            <summary>
            Get/Set the X (horizontal) coordinates of the conductors
            </summary>
        </member>
        <member name="P:dss_sharp.LineSpacings.Ycoords">
            <summary>
            Get/Set the Y (vertical/height) coordinates of the conductors
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.AllNames">
            <summary>
            Array of strings with all LoadShape names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.Count">
            <summary>
            Number of LoadShape objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.First">
            <summary>
            Sets the first LoadShape active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.Name">
            <summary>
            Sets the active LoadShape by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.Next">
            <summary>
            Sets the next LoadShape active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.idx">
            <summary>
            Get/set active LoadShape by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.HrInterval">
            <summary>
            Fixed interval time value, hours.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.MinInterval">
            <summary>
            Fixed Interval time value, in minutes
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.Npts">
            <summary>
            Get/set Number of points in active Loadshape.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.Pmult">
            <summary>
            Array of doubles for the P multiplier in the Loadshape.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.QBase">
            <summary>
            Base for normalizing Q curve. If left at zero, the peak value is used.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.Qmult">
            <summary>
            Array of doubles containing the Q multipliers.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.TimeArray">
            <summary>
            Time array in hours correscponding to P and Q multipliers when the Interval=0.
            </summary>
        </member>
        <member name="P:dss_sharp.LoadShapes.UseActual">
            <summary>
            Boolean flag to let Loads know to use the actual value in the curve rather than use the value as a multiplier.
            </summary>
        </member>
        <member name="M:dss_sharp.LoadShapes.UseFloat32">
            <summary>
            Converts the current LoadShape data to float32/single precision.
            If there is no data or the data is already represented using float32, nothing is done.
            
            (API Extension)
            </summary>
        </member>
        <member name="M:dss_sharp.LoadShapes.UseFloat64">
            <summary>
            Converts the current LoadShape data to float64/double precision.
            If there is no data or the data is already represented using float64, nothing is done.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.AllNames">
            <summary>
            Array of strings with all Load names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Count">
            <summary>
            Number of Load objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.First">
            <summary>
            Sets the first Load active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Name">
            <summary>
            Sets the active Load by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Next">
            <summary>
            Sets the next Load active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.idx">
            <summary>
            Get/set active Load by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.AllocationFactor">
            <summary>
            Factor for allocating loads by connected xfkva
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.CVRcurve">
            <summary>
            Name of a loadshape with both Mult and Qmult, for CVR factors as a function of time.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.CVRvars">
            <summary>
            Percent reduction in Q for percent reduction in V. Must be used with dssLoadModelCVR.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.CVRwatts">
            <summary>
            Percent reduction in P for percent reduction in V. Must be used with dssLoadModelCVR.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Cfactor">
            <summary>
            Factor relates average to peak kw.  Used for allocation with kwh and kwhdays
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Growth">
            <summary>
            Name of the growthshape curve for yearly load growth factors.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.IsDelta">
            <summary>
            Delta loads are connected line-to-line.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Model">
            <summary>
            The Load Model defines variation of P and Q with voltage.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.NumCust">
            <summary>
            Number of customers in this load, defaults to one.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.PF">
            <summary>
            Get or set Power Factor for Active Load. Specify leading PF as negative. Updates kvar based on present value of kW
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.PctMean">
            <summary>
            Average percent of nominal load in Monte Carlo studies; only if no loadshape defined for this load.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.PctStdDev">
            <summary>
            Percent standard deviation for Monte Carlo load studies; if there is no loadshape assigned to this load.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.RelWeight">
            <summary>
            Relative Weighting factor for the active LOAD
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Rneut">
            <summary>
            Neutral resistance for wye-connected loads.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Spectrum">
            <summary>
            Name of harmonic current spectrrum shape.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Status">
            <summary>
            Response to load multipliers: Fixed (growth only), Exempt (no LD curve), Variable (all).
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Vmaxpu">
            <summary>
            Maximum per-unit voltage to use the load model. Above this, constant Z applies.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Vminemerg">
            <summary>
            Minimum voltage for unserved energy (UE) evaluation.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Vminnorm">
            <summary>
            Minimum voltage for energy exceeding normal (EEN) evaluations.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Vminpu">
            <summary>
            Minimum voltage to apply the load model. Below this, constant Z is used.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Xneut">
            <summary>
            Neutral reactance for wye-connected loads.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Yearly">
            <summary>
            Name of yearly duration loadshape
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.ZIPV">
            <summary>
            Array of 7 doubles with values for ZIPV property of the load object
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.daily">
            <summary>
            Name of the loadshape for a daily load profile.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.duty">
            <summary>
            Name of the loadshape for a duty cycle simulation.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.kV">
            <summary>
            Set kV rating for active Load. For 2 or more phases set Line-Line kV. Else actual kV across terminals.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.kW">
            <summary>
            Set kW for active Load. Updates kvar based on present PF.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.kva">
            <summary>
            Base load kva. Also defined kw and kvar or pf input, or load allocation by kwh or xfkva.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.kvar">
            <summary>
            Get/set kvar for active Load. If set, updates PF based on present kW.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.kwh">
            <summary>
            kwh billed for this period. Can be used with Cfactor for load allocation.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.kwhdays">
            <summary>
            Length of kwh billing period for average demand calculation. Default 30.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.pctSeriesRL">
            <summary>
            Percent of Load that is modeled as series R-L for harmonics studies
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.xfkVA">
            <summary>
            Rated service transformer kVA for load allocation, using AllocationFactor. Affects kW, kvar, and pf.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Sensor">
            <summary>
            Name of the sensor monitoring this load.
            </summary>
        </member>
        <member name="P:dss_sharp.Loads.Phases">
            <summary>
            Number of phases
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.ZonePCE">
            <summary>
            Returns the list of all PCE within the area covered by the energy meter
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.AllNames">
            <summary>
            Array of strings with all Meter names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.Count">
            <summary>
            Number of Meter objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.First">
            <summary>
            Sets the first Meter active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.Name">
            <summary>
            Sets the active Meter by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.Next">
            <summary>
            Sets the next Meter active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.idx">
            <summary>
            Get/set active Meter by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.AllBranchesInZone">
            <summary>
            Wide string list of all branches in zone of the active energymeter object.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.AllEndElements">
            <summary>
            Array of names of all zone end elements.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.AllocFactors">
            <summary>
            Array of doubles: set the phase allocation factors for the active meter.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.AvgRepairTime">
            <summary>
            Average Repair time in this section of the meter zone
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.CalcCurrent">
            <summary>
            Set the magnitude of the real part of the Calculated Current (normally determined by solution) for the Meter to force some behavior on Load Allocation
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.CountBranches">
            <summary>
            Number of branches in Active energymeter zone. (Same as sequencelist size)
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.CountEndElements">
            <summary>
            Number of zone end elements in the active meter zone.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.CustInterrupts">
            <summary>
            Total customer interruptions for this Meter zone based on reliability calcs.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.DIFilesAreOpen">
            <summary>
            Global Flag in the DSS to indicate if Demand Interval (DI) files have been properly opened.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.FaultRateXRepairHrs">
            <summary>
            Sum of Fault Rate time Repair Hrs in this section of the meter zone
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.MeteredElement">
            <summary>
            Set Name of metered element
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.MeteredTerminal">
            <summary>
            set Number of Metered Terminal
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.NumSectionBranches">
            <summary>
            Number of branches (lines) in this section
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.NumSectionCustomers">
            <summary>
            Number of Customers in the active section.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.NumSections">
            <summary>
            Number of feeder sections in this meter's zone
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.OCPDeviceType">
            <summary>
            Type of OCP device. 1=Fuse; 2=Recloser; 3=Relay
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.Peakcurrent">
            <summary>
            Array of doubles to set values of Peak Current property
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.RegisterNames">
            <summary>
            Array of strings containing the names of the registers.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.RegisterValues">
            <summary>
            Array of all the values contained in the Meter registers for the active Meter.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SAIDI">
            <summary>
            SAIDI for this meter's zone. Execute DoReliabilityCalc first.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SAIFI">
            <summary>
            Returns SAIFI for this meter's Zone. Execute Reliability Calc method first.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SAIFIKW">
            <summary>
            SAIFI based on kW rather than number of customers. Get after reliability calcs.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SectSeqIdx">
            <summary>
            SequenceIndex of the branch at the head of this section
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SectTotalCust">
            <summary>
            Total Customers downline from this section
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SeqListSize">
            <summary>
            Size of Sequence List
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SequenceIndex">
            <summary>
            Get/set Index into Meter's SequenceList that contains branch pointers in lexical order. Earlier index guaranteed to be upline from later index. Sets PDelement active.
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.SumBranchFltRates">
            <summary>
            Sum of the branch fault rates in this section of the meter's zone
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.TotalCustomers">
            <summary>
            Total Number of customers in this zone (downline from the EnergyMeter)
            </summary>
        </member>
        <member name="P:dss_sharp.Meters.Totals">
            <summary>
            Totals of all registers of all meters
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AccumulatedL">
            <summary>
            accummulated failure rate for this branch on downline
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.Count">
            <summary>
            Number of PD elements (including disabled elements)
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.FaultRate">
            <summary>
            Get/Set Number of failures per year. 
            For LINE elements: Number of failures per unit length per year.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.First">
            <summary>
            Set the first enabled PD element to be the active element.
            Returns 0 if none found.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.FromTerminal">
            <summary>
            Number of the terminal of active PD element that is on the "from" 
            side. This is set after the meter zone is determined.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.IsShunt">
            <summary>
            Boolean indicating of PD element should be treated as a shunt 
            element rather than a series element. Applies to Capacitor and Reactor 
            elements in particular.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.Lambda">
            <summary>
            Failure rate for this branch. Faults per year including length of line.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.Name">
            <summary>
            Get/Set name of active PD Element. Returns null string if active element 
            is not PDElement type.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.Next">
            <summary>
            Advance to the next PD element in the circuit. Enabled elements 
            only. Returns 0 when no more elements.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.Numcustomers">
            <summary>
            Number of customers, this branch
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.ParentPDElement">
            <summary>
            Sets the parent PD element to be the active circuit element.
            Returns 0 if no more elements upline.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.RepairTime">
            <summary>
            Average repair time for this element in hours
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.SectionID">
            <summary>
            Integer ID of the feeder section that this PDElement branch is part of
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.TotalMiles">
            <summary>
            Total miles of line from this element to the end of the zone. For recloser siting algorithm.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.Totalcustomers">
            <summary>
            Total number of customers from this branch to the end of the zone
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.pctPermanent">
            <summary>
            Get/Set percent of faults that are permanent (require repair). Otherwise, fault is assumed to be transient/temporary.
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllNames">
            <summary>
            Array of strings consisting of all PD element names.
            
            (API Extension)
            </summary>
        </member>
        <member name="M:dss_sharp.PDElements.AllMaxCurrents(System.Boolean)">
            <summary>
            Array of doubles with the maximum current across the conductors, for each PD 
            element.
            
            By default, only the *first terminal* is used for the maximum current, matching
            the behavior of the "export capacity" command. Pass `true` to 
            force the analysis to all terminals.
            
            See also: 
            https://sourceforge.net/p/electricdss/discussion/beginners/thread/da5b93ca/
            
            (API Extension)
            </summary>
        </member>
        <member name="M:dss_sharp.PDElements.AllPctNorm(System.Boolean)">
            <summary>
            Array of doubles with the maximum current across the conductors as a percentage 
            of the Normal Ampere Rating, for each PD element.
            
            By default, only the *first terminal* is used for the maximum current, matching
            the behavior of the "export capacity" command. Pass `true` to 
            force the analysis to all terminals.
            
            See also: 
            https://sourceforge.net/p/electricdss/discussion/beginners/thread/da5b93ca/
            
            (API Extension)
            </summary>
        </member>
        <member name="M:dss_sharp.PDElements.AllPctEmerg(System.Boolean)">
            <summary>
            Array of doubles with the maximum current across the conductors as a percentage
            of the Emergency Ampere Rating, for each PD element.
            
            By default, only the *first terminal* is used for the maximum current, matching
            the behavior of the "export capacity" command. Pass `true` to 
            force the analysis to all terminals.
            
            See also: 
            https://sourceforge.net/p/electricdss/discussion/beginners/thread/da5b93ca/
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllCurrents">
            <summary>
            Complex array of currents for all conductors, all terminals, for each PD element.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllCurrentsMagAng">
            <summary>
            Complex array (magnitude and angle format) of currents for all conductors, all terminals, for each PD element.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllCplxSeqCurrents">
            <summary>
            Complex double array of Sequence Currents for all conductors of all terminals, for each PD elements.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllSeqCurrents">
            <summary>
            Double array of the symmetrical component currents (magnitudes only) into each 3-phase terminal, for each PD element.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllPowers">
            <summary>
            Complex array of powers into each conductor of each terminal, for each PD element.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllSeqPowers">
            <summary>
            Complex array of sequence powers into each 3-phase teminal, for each PD element
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllNumPhases">
            <summary>
            Integer array listing the number of phases of all PD elements
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllNumConductors">
            <summary>
            Integer array listing the number of conductors of all PD elements
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PDElements.AllNumTerminals">
            <summary>
            Integer array listing the number of terminals of all PD elements
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.AllNames">
            <summary>
            Array of strings with all PVSystem names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Count">
            <summary>
            Number of PVSystem objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.First">
            <summary>
            Sets the first PVSystem active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Name">
            <summary>
            Sets the active PVSystem by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Next">
            <summary>
            Sets the next PVSystem active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.idx">
            <summary>
            Get/set active PVSystem by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Irradiance">
            <summary>
            Get/set the present value of the Irradiance property in kW/m²
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.PF">
            <summary>
            Get/set the power factor for the active PVSystem
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.RegisterNames">
            <summary>
            Array of PVSYSTEM energy meter register names
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.RegisterValues">
            <summary>
            Array of doubles containing values in PVSystem registers.
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.kVArated">
            <summary>
            Get/set Rated kVA of the PVSystem
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.kW">
            <summary>
            Get kW output
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.kvar">
            <summary>
            Get/set kvar output value
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.daily">
            <summary>
            Name of the dispatch shape to use for daily simulations. Must be previously
            defined as a Loadshape object of 24 hrs, typically. In the default dispatch
            mode, the PVSystem element uses this loadshape to trigger State changes.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.duty">
            <summary>
            Name of the load shape to use for duty cycle dispatch simulations such as
            for solar ramp rate studies. Must be previously defined as a Loadshape
            object. Typically would have time intervals of 1-5 seconds.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.yearly">
            <summary>
            Dispatch shape to use for yearly simulations. Must be previously defined
            as a Loadshape object. If this is not specified, the Daily dispatch shape,
            if any, is repeated during Yearly solution modes. In the default dispatch
            mode, the PVSystem element uses this loadshape to trigger State changes.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Tdaily">
            <summary>
            Temperature shape to use for daily simulations. Must be previously defined
            as a TShape object of 24 hrs, typically. The PVSystem element uses this
            TShape to determine the Pmpp from the Pmpp vs T curve. Units must agree
            with the Pmpp vs T curve.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Tduty">
            <summary>
            Temperature shape to use for duty cycle dispatch simulations such as for
            solar ramp rate studies. Must be previously defined as a TShape object.
            Typically would have time intervals of 1-5 seconds. Designate the number
            of points to solve using the Set Number=xxxx command. If there are fewer
            points in the actual shape, the shape is assumed to repeat. The PVSystem
            model uses this TShape to determine the Pmpp from the Pmpp vs T curve.
            Units must agree with the Pmpp vs T curve.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Tyearly">
            <summary>
            Temperature shape to use for yearly simulations. Must be previously defined
            as a TShape object. If this is not specified, the Daily dispatch shape, if
            any, is repeated during Yearly solution modes. The PVSystem element uses
            this TShape to determine the Pmpp from the Pmpp vs T curve. Units must
            agree with the Pmpp vs T curve.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.IrradianceNow">
            <summary>
            Returns the current irradiance value for the active PVSystem. Use it to 
            know what's the current irradiance value for the PV during a simulation.
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Pmpp">
            <summary>
            Gets/sets the rated max power of the PV array for 1.0 kW/sq-m irradiance 
            and a user-selected array temperature of the active PVSystem.
            </summary>
        </member>
        <member name="P:dss_sharp.PVSystems.Sensor">
            <summary>
            Name of the sensor monitoring this element.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.AllNames">
            <summary>
            Array of strings with all Reactor names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Count">
            <summary>
            Number of Reactor objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.First">
            <summary>
            Sets the first Reactor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Name">
            <summary>
            Sets the active Reactor by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Next">
            <summary>
            Sets the next Reactor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.idx">
            <summary>
            Get/set active Reactor by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.SpecType">
            <summary>
            How the reactor data was provided: 1=kvar, 2=R+jX, 3=R and X matrices, 4=sym components.
            Depending on this value, only some properties are filled or make sense in the context.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.IsDelta">
            <summary>
            Delta connection or wye?
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Parallel">
            <summary>
            Indicates whether Rmatrix and Xmatrix are to be considered in parallel.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.LmH">
            <summary>
            Inductance, mH. Alternate way to define the reactance, X, property.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.kV">
            <summary>
            For 2, 3-phase, kV phase-phase. Otherwise specify actual coil rating.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.kvar">
            <summary>
            Total kvar, all phases.  Evenly divided among phases. Only determines X. Specify R separately
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Phases">
            <summary>
            Number of phases.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Bus1">
            <summary>
            Name of first bus.
            Bus2 property will default to this bus, node 0, unless previously specified.
            Only Bus1 need be specified for a Yg shunt reactor.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Bus2">
            <summary>
            Name of 2nd bus. Defaults to all phases connected to first bus, node 0, (Shunt Wye Connection) except when Bus2 is specifically defined.
            Not necessary to specify for delta (LL) connection
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.LCurve">
            <summary>
            Name of XYCurve object, previously defined, describing per-unit variation of phase inductance, L=X/w, vs. frequency. Applies to reactance specified by X, LmH, Z, or kvar property. L generally decreases somewhat with frequency above the base frequency, approaching a limit at a few kHz.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.RCurve">
            <summary>
            Name of XYCurve object, previously defined, describing per-unit variation of phase resistance, R, vs. frequency. Applies to resistance specified by R or Z property. If actual values are not known, R often increases by approximately the square root of frequency.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.R">
            <summary>
            Resistance (in series with reactance), each phase, ohms. This property applies to REACTOR specified by either kvar or X. See also help on Z.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.X">
            <summary>
            Reactance, each phase, ohms at base frequency. See also help on Z and LmH properties.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Rp">
            <summary>
            Resistance in parallel with R and X (the entire branch). Assumed infinite if not specified.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Rmatrix">
            <summary>
            Resistance matrix, ohms at base frequency. Order of the matrix is the number of phases. Mutually exclusive to specifying parameters by kvar or X.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Xmatrix">
            <summary>
            Reactance matrix, ohms at base frequency. Order of the matrix is the number of phases. Mutually exclusive to specifying parameters by kvar or X.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Z">
            <summary>
            Alternative way of defining R and X properties. Enter a 2-element array representing R +jX in ohms.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Z1">
            <summary>
            Positive-sequence impedance, ohms, as a 2-element array representing a complex number.
            
            If defined, Z1, Z2, and Z0 are used to define the impedance matrix of the REACTOR.
            
            Z1 MUST BE DEFINED TO USE THIS OPTION FOR DEFINING THE MATRIX.
            
            Side Effect: Sets Z2 and Z0 to same values unless they were previously defined.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Z2">
            <summary>
            Negative-sequence impedance, ohms, as a 2-element array representing a complex number.
            
            Used to define the impedance matrix of the REACTOR if Z1 is also specified.
            
            Note: Z2 defaults to Z1 if it is not specifically defined. If Z2 is not equal to Z1, the impedance matrix is asymmetrical.
            </summary>
        </member>
        <member name="P:dss_sharp.Reactors.Z0">
            <summary>
            Zero-sequence impedance, ohms, as a 2-element array representing a complex number.
            
            Used to define the impedance matrix of the REACTOR if Z1 is also specified.
            
            Note: Z0 defaults to Z1 if it is not specifically defined.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.AllNames">
            <summary>
            Array of strings with all Recloser names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.Count">
            <summary>
            Number of Recloser objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.First">
            <summary>
            Sets the first Recloser active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.Name">
            <summary>
            Sets the active Recloser by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.Next">
            <summary>
            Sets the next Recloser active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.idx">
            <summary>
            Get/set active Recloser by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.GroundInst">
            <summary>
            Ground (3I0) instantaneous trip setting - curve multipler or actual amps.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.GroundTrip">
            <summary>
            Ground (3I0) trip multiplier or actual amps
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.MonitoredObj">
            <summary>
            Full name of object this Recloser to be monitored.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.MonitoredTerm">
            <summary>
            Terminal number of Monitored object for the Recloser
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.NumFast">
            <summary>
            Number of fast shots
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.PhaseInst">
            <summary>
            Phase instantaneous curve multipler or actual amps
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.PhaseTrip">
            <summary>
            Phase trip curve multiplier or actual amps
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.RecloseIntervals">
            <summary>
            Array of Doubles: reclose intervals, s, between shots.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.Shots">
            <summary>
            Number of shots to lockout (fast + delayed)
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.SwitchedObj">
            <summary>
            Full name of the circuit element that is being switched by the Recloser.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.SwitchedTerm">
            <summary>
            Terminal number of the controlled device being switched by the Recloser
            </summary>
        </member>
        <member name="M:dss_sharp.Reclosers.Reset">
            <summary>
            Reset recloser to normal state. 
            If open, lock out the recloser. 
            If closed, resets recloser to first operation.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.State">
            <summary>
            Get/Set present state of recloser. 
            If set to open (ActionCodes.Open=1), open recloser's controlled element and lock out the recloser. 
            If set to close (ActionCodes.Close=2), close recloser's controlled element and resets recloser to first operation.
            </summary>
        </member>
        <member name="P:dss_sharp.Reclosers.NormalState">
            <summary>
            Get/set normal state (ActionCodes.Open=1, ActionCodes.Close=2) of the recloser.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.AllNames">
            <summary>
            Array of strings with all RegControl names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.Count">
            <summary>
            Number of RegControl objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.First">
            <summary>
            Sets the first RegControl active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.Name">
            <summary>
            Sets the active RegControl by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.Next">
            <summary>
            Sets the next RegControl active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.idx">
            <summary>
            Get/set active RegControl by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.CTPrimary">
            <summary>
            CT primary ampere rating (secondary is 0.2 amperes)
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.Delay">
            <summary>
            Time delay [s] after arming before the first tap change. Control may reset before actually changing taps.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ForwardBand">
            <summary>
            Regulation bandwidth in forward direciton, centered on Vreg
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ForwardR">
            <summary>
            LDC R setting in Volts
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ForwardVreg">
            <summary>
            Target voltage in the forward direction, on PT secondary base.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ForwardX">
            <summary>
            LDC X setting in Volts
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.IsInverseTime">
            <summary>
            Time delay is inversely adjsuted, proportinal to the amount of voltage outside the regulating band.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.IsReversible">
            <summary>
            Regulator can use different settings in the reverse direction.  Usually not applicable to substation transformers.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.MaxTapChange">
            <summary>
            Maximum tap change per iteration in STATIC solution mode. 1 is more realistic, 16 is the default for a faster soluiton.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.MonitoredBus">
            <summary>
            Name of a remote regulated bus, in lieu of LDC settings
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.PTratio">
            <summary>
            PT ratio for voltage control settings
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ReverseBand">
            <summary>
            Bandwidth in reverse direction, centered on reverse Vreg.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ReverseR">
            <summary>
            Reverse LDC R setting in Volts.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ReverseVreg">
            <summary>
            Target voltage in the revese direction, on PT secondary base.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.ReverseX">
            <summary>
            Reverse LDC X setting in volts.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.TapDelay">
            <summary>
            Time delay [s] for subsequent tap changes in a set. Control may reset before actually changing taps.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.TapNumber">
            <summary>
            Integer number of the tap that the controlled transformer winding is currentliy on.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.TapWinding">
            <summary>
            Tapped winding number
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.Transformer">
            <summary>
            Name of the transformer this regulator controls
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.VoltageLimit">
            <summary>
            First house voltage limit on PT secondary base.  Setting to 0 disables this function.
            </summary>
        </member>
        <member name="P:dss_sharp.RegControls.Winding">
            <summary>
            Winding number for PT and CT connections
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.AllNames">
            <summary>
            Array of strings with all Relay names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.Count">
            <summary>
            Number of Relay objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.First">
            <summary>
            Sets the first Relay active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.Name">
            <summary>
            Sets the active Relay by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.Next">
            <summary>
            Sets the next Relay active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.idx">
            <summary>
            Get/set active Relay by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.MonitoredObj">
            <summary>
            Full name of object this Relay is monitoring.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.MonitoredTerm">
            <summary>
            Number of terminal of monitored element that this Relay is monitoring.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.SwitchedObj">
            <summary>
            Full name of element that will be switched when relay trips.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.SwitchedTerm">
            <summary>
            Terminal number of the switched object that will be opened when the relay trips.
            </summary>
        </member>
        <member name="M:dss_sharp.Relays.Open">
            <summary>
            Open relay's controlled element and lock out the relay.
            </summary>
        </member>
        <member name="M:dss_sharp.Relays.Close">
            <summary>
            Close the switched object controlled by the relay. Resets relay to first operation.
            </summary>
        </member>
        <member name="M:dss_sharp.Relays.Reset">
            <summary>
            Reset relay to normal state. 
            If open, lock out the relay. 
            If closed, resets relay to first operation.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.State">
            <summary>
            Get/Set present state of relay. 
            If set to open, open relay's controlled element and lock out the relay. 
            If set to close, close relay's controlled element and resets relay to first operation.
            </summary>
        </member>
        <member name="P:dss_sharp.Relays.NormalState">
            <summary>
            Normal state of relay.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.AllNames">
            <summary>
            Array of strings with all Sensor names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.Count">
            <summary>
            Number of Sensor objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.First">
            <summary>
            Sets the first Sensor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.Name">
            <summary>
            Sets the active Sensor by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.Next">
            <summary>
            Sets the next Sensor active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.idx">
            <summary>
            Get/set active Sensor by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.Currents">
            <summary>
            Array of doubles for the line current measurements; don't use with kWS and kVARS.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.IsDelta">
            <summary>
            True if measured voltages are line-line. Currents are always line currents.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.MeteredElement">
            <summary>
            Full Name of the measured element
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.MeteredTerminal">
            <summary>
            Number of the measured terminal in the measured element.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.PctError">
            <summary>
            Assumed percent error in the Sensor measurement. Default is 1.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.ReverseDelta">
            <summary>
            True if voltage measurements are 1-3, 3-2, 2-1.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.Weight">
            <summary>
            Weighting factor for this Sensor measurement with respect to other Sensors. Default is 1.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.kVARS">
            <summary>
            Array of doubles for Q measurements. Overwrites Currents with a new estimate using kWS.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.kVS">
            <summary>
            Array of doubles for the LL or LN (depending on Delta connection) voltage measurements.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.kVbase">
            <summary>
            Voltage base for the sensor measurements. LL for 2 and 3-phase sensors, LN for 1-phase sensors.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.kWS">
            <summary>
            Array of doubles for P measurements. Overwrites Currents with a new estimate using kVARS.
            </summary>
        </member>
        <member name="P:dss_sharp.Sensors.AllocationFactor">
            <summary>
            Array of doubles for the allocation factors for each phase.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.AllNames">
            <summary>
            Array of strings with all SwtControl names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.Count">
            <summary>
            Number of SwtControl objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.First">
            <summary>
            Sets the first SwtControl active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.Name">
            <summary>
            Sets the active SwtControl by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.Next">
            <summary>
            Sets the next SwtControl active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.idx">
            <summary>
            Get/set active SwtControl by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.Action">
            <summary>
            Open or Close the switch. No effect if switch is locked.  However, Reset removes any lock and then closes the switch (shelf state).
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.Delay">
            <summary>
            Time delay [s] betwen arming and opening or closing the switch.  Control may reset before actually operating the switch.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.IsLocked">
            <summary>
            The lock prevents both manual and automatic switch operation.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.NormalState">
            <summary>
            Get/set Normal state of switch (see actioncodes) dssActionOpen or dssActionClose
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.State">
            <summary>
            Set it to force the switch to a specified state, otherwise read its present state.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.SwitchedObj">
            <summary>
            Full name of the switched element.
            </summary>
        </member>
        <member name="P:dss_sharp.SwtControls.SwitchedTerm">
            <summary>
            Terminal number where the switch is located on the SwitchedObj
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.AllNames">
            <summary>
            Array of strings with all TSData names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.Count">
            <summary>
            Number of TSData objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.First">
            <summary>
            Sets the first TSData active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.Name">
            <summary>
            Sets the active TSData by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.Next">
            <summary>
            Sets the next TSData active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.idx">
            <summary>
            Get/set active TSData by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.EmergAmps">
            <summary>
            Emergency ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.TSData.NormAmps">
            <summary>
            Normal Ampere rating
            </summary>
        </member>
        <member name="M:dss_sharp.Text.Commands(System.String[])">
            <summary>
            Runs a list of strings as commands directly in the DSS engine.
            Intermediate results are ignored.
            
            (API Extensions)
            </summary>
        </member>
        <member name="M:dss_sharp.Text.Commands(System.String)">
            <summary>
            Runs a large string as commands directly in the DSS engine.
            Intermediate results are ignored.
            
            (API Extensions)
            </summary>
        </member>
        <member name="P:dss_sharp.Text.Command">
            <summary>
            Input command string for the DSS.
            </summary>
        </member>
        <member name="P:dss_sharp.Text.Result">
            <summary>
            Result string for the last command.
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.ActiveBranch">
            <summary>
            Returns index of the active branch
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.ActiveLevel">
            <summary>
            Topological depth of the active branch
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.AllIsolatedBranches">
            <summary>
            Array of all isolated branch names.
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.AllIsolatedLoads">
            <summary>
            Array of all isolated load names.
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.AllLoopedPairs">
            <summary>
            Array of all looped element names, by pairs.
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.BackwardBranch">
            <summary>
            Move back toward the source, return index of new active branch, or 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.BranchName">
            <summary>
            Name of the active branch.
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.BusName">
            <summary>
            Set the active branch to one containing this bus, return index or 0 if not found
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.First">
            <summary>
            Sets the first branch active, returns 0 if none.
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.FirstLoad">
            <summary>
            First load at the active branch, return index or 0 if none.
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.ForwardBranch">
            <summary>
            Move forward in the tree, return index of new active branch or 0 if no more
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.LoopedBranch">
            <summary>
            Move to looped branch, return index or 0 if none.
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.Next">
            <summary>
            Sets the next branch active, returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.NextLoad">
            <summary>
            Next load at the active branch, return index or 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.NumIsolatedBranches">
            <summary>
            Number of isolated branches (PD elements and capacitors).
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.NumIsolatedLoads">
            <summary>
            Number of isolated loads
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.NumLoops">
            <summary>
            Number of loops
            </summary>
        </member>
        <member name="P:dss_sharp.Topology.ParallelBranch">
            <summary>
            Move to directly parallel branch, return index or 0 if none.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.AllNames">
            <summary>
            Array of strings with all Transformer names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Count">
            <summary>
            Number of Transformer objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.First">
            <summary>
            Sets the first Transformer active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Name">
            <summary>
            Sets the active Transformer by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Next">
            <summary>
            Sets the next Transformer active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.idx">
            <summary>
            Get/set active Transformer by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.IsDelta">
            <summary>
            Active Winding delta or wye connection?
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.MaxTap">
            <summary>
            Active Winding maximum tap in per-unit.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.MinTap">
            <summary>
            Active Winding minimum tap in per-unit.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.NumTaps">
            <summary>
            Active Winding number of tap steps betwein MinTap and MaxTap.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.NumWindings">
            <summary>
            Number of windings on this transformer. Allocates memory; set or change this property first.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.R">
            <summary>
            Active Winding resistance in %
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Rneut">
            <summary>
            Active Winding neutral resistance [ohms] for wye connections. Set less than zero for ungrounded wye.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Tap">
            <summary>
            Active Winding tap in per-unit.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Wdg">
            <summary>
            Active Winding Number from 1..NumWindings. Update this before reading or setting a sequence of winding properties (R, Tap, kV, kVA, etc.)
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.XfmrCode">
            <summary>
            Name of an XfrmCode that supplies electircal parameters for this Transformer.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Xhl">
            <summary>
            Percent reactance between windings 1 and 2, on winding 1 kVA base. Use for 2-winding or 3-winding transformers.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Xht">
            <summary>
            Percent reactance between windigns 1 and 3, on winding 1 kVA base.  Use for 3-winding transformers only.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Xlt">
            <summary>
            Percent reactance between windings 2 and 3, on winding 1 kVA base. Use for 3-winding transformers only.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.Xneut">
            <summary>
            Active Winding neutral reactance [ohms] for wye connections.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.kV">
            <summary>
            Active Winding kV rating.  Phase-phase for 2 or 3 phases, actual winding kV for 1 phase transformer.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.kVA">
            <summary>
            Active Winding kVA rating. On winding 1, this also determines normal and emergency current ratings for all windings.
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.WdgVoltages">
             <summary>
             Complex array of voltages for active winding
            
             WARNING: If the transformer has open terminal(s), results may be wrong, i.e. avoid using this
             in those situations. For more information, see https://github.com/dss-extensions/dss-extensions/issues/24
             </summary>
        </member>
        <member name="P:dss_sharp.Transformers.WdgCurrents">
             <summary>
             All Winding currents (ph1, wdg1, wdg2,... ph2, wdg1, wdg2 ...)
            
             WARNING: If the transformer has open terminal(s), results may be wrong, i.e. avoid using this
             in those situations. For more information, see https://github.com/dss-extensions/dss-extensions/issues/24
             </summary>
        </member>
        <member name="P:dss_sharp.Transformers.strWdgCurrents">
             <summary>
             All winding currents in CSV string form like the WdgCurrents property
            
             WARNING: If the transformer has open terminal(s), results may be wrong, i.e. avoid using this
             in those situations. For more information, see https://github.com/dss-extensions/dss-extensions/issues/24
             </summary>
        </member>
        <member name="P:dss_sharp.Transformers.CoreType">
            <summary>
            Transformer Core Type: 0=Shell; 1=1ph; 3-3leg; 4=4-Leg; 5=5-leg; 9=Core-1-phase
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.RdcOhms">
            <summary>
            dc Resistance of active winding in ohms for GIC analysis
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.LossesByType">
            <summary>
            Complex array with the losses by type (total losses, load losses, no-load losses), in VA
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Transformers.AllLossesByType">
            <summary>
            Complex array with the losses by type (total losses, load losses, no-load losses), in VA, concatenated for ALL transformers
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.AllNames">
            <summary>
            Array of strings with all Vsource names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.Count">
            <summary>
            Number of Vsource objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.First">
            <summary>
            Sets the first Vsource active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.Name">
            <summary>
            Sets the active Vsource by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.Next">
            <summary>
            Sets the next Vsource active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.idx">
            <summary>
            Get/set active Vsource by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.AngleDeg">
            <summary>
            Phase angle of first phase in degrees
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.BasekV">
            <summary>
            Source voltage in kV
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.Frequency">
            <summary>
            Source frequency in Hz
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.Phases">
            <summary>
            Number of phases
            </summary>
        </member>
        <member name="P:dss_sharp.Vsources.pu">
            <summary>
            Per-unit value of source voltage
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.AllNames">
            <summary>
            Array of strings with all WireData names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.Count">
            <summary>
            Number of WireData objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.First">
            <summary>
            Sets the first WireData active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.Name">
            <summary>
            Sets the active WireData by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.Next">
            <summary>
            Sets the next WireData active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.idx">
            <summary>
            Get/set active WireData by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.EmergAmps">
            <summary>
            Emergency ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.NormAmps">
            <summary>
            Normal Ampere rating
            </summary>
        </member>
        <member name="P:dss_sharp.WireData.CapRadius">
            <summary>
            Equivalent conductor radius for capacitance calcs. Specify this for bundled conductors. Defaults to same value as radius.
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.AllNames">
            <summary>
            Array of strings with all XYCurve names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Count">
            <summary>
            Number of XYCurve objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.First">
            <summary>
            Sets the first XYCurve active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Name">
            <summary>
            Sets the active XYCurve by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Next">
            <summary>
            Sets the next XYCurve active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.idx">
            <summary>
            Get/set active XYCurve by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Npts">
            <summary>
            Get/Set Number of points in X-Y curve
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Xarray">
            <summary>
            Get/set X values as a Array of doubles. Set Npts to max number expected if setting
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Xscale">
            <summary>
            Factor to scale X values from original curve
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Xshift">
            <summary>
            Amount to shift X value from original curve
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Yarray">
            <summary>
            Get/Set Y values in curve; Set Npts to max number expected if setting
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Yscale">
            <summary>
            Factor to scale Y values from original curve
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.Yshift">
            <summary>
            Amount to shift Y value from original curve
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.x">
            <summary>
            Set X value or get interpolated value after setting Y
            </summary>
        </member>
        <member name="P:dss_sharp.XYCurves.y">
            <summary>
            Set Y value or get interpolated Y value after setting X
            </summary>
        </member>
        <member name="P:dss_sharp.YMatrix.SolverOptions">
            <summary>
            Sparse solver options. See the enumeration SparseSolverOptions
            </summary>
        </member>
        <member name="M:dss_sharp.ZIP.Extract(System.String)">
            <summary>
            Extracts the contents of the file "FileName" from the current (open) ZIP file.
            Returns a byte-string.
            
            (API Extension)
            </summary>
        </member>
        <member name="M:dss_sharp.ZIP.List(System.String)">
            <summary>
            List of strings consisting of all names match the regular expression provided in regexp.
            If no expression is provided, all names in the current open ZIP are returned.
            
            See https://regex.sorokin.engineer/en/latest/regular_expressions.html for information on 
            the expression syntax and options.
            
            (API Extension)
            </summary>
        </member>
        <member name="M:dss_sharp.ZIP.Open(System.String)">
            <summary>
            Opens and prepares a ZIP file to be used by the DSS text parser.
            Currently, the ZIP format support is limited by what is provided in the Free Pascal distribution.
            Besides that, the full filenames inside the ZIP must be shorter than 256 characters.
            The limitations should be removed in a future revision.
            
            (API Extension)
            </summary>
        </member>
        <member name="M:dss_sharp.ZIP.Close">
            <summary>
            Closes the current open ZIP file
            
            (API Extension)
            </summary>
        </member>
        <member name="M:dss_sharp.ZIP.Redirect(System.String)">
            <summary>
            Runs a "Redirect" command inside the current (open) ZIP file.
            In the current implementation, all files required by the script must
            be present inside the ZIP, using relative paths. The only exceptions are
            memory-mapped files.
            
            (API Extension)
            </summary>
        </member>
        <member name="M:dss_sharp.ZIP.Contains(System.String)">
            <summary>
            Check if the given path name is present in the current ZIP file.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.AllNames">
            <summary>
            Array of strings with all GICSource names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Count">
            <summary>
            Number of GICSource objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.First">
            <summary>
            Sets the first GICSource active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Name">
            <summary>
            Sets the active GICSource by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Next">
            <summary>
            Sets the next GICSource active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.idx">
            <summary>
            Get/set active GICSource by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Bus1">
            <summary>
            First bus name of GICSource (Created name)
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Bus2">
            <summary>
            Second bus name
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Phases">
            <summary>
            Number of Phases, this GICSource element.
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.EN">
            <summary>
            Northward E Field V/km
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.EE">
            <summary>
            Eastward E Field, V/km
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Lat1">
            <summary>
            Latitude of Bus1 (degrees)
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Lat2">
            <summary>
            Latitude of Bus2 (degrees)
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Lon1">
            <summary>
            Longitude of Bus1 (Degrees)
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Lon2">
            <summary>
            Longitude of Bus2 (Degrees)
            </summary>
        </member>
        <member name="P:dss_sharp.GICSources.Volts">
            <summary>
            Specify dc voltage directly
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.AllNames">
            <summary>
            Array of strings with all Storage names in the circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.Count">
            <summary>
            Number of Storage objects in active circuit.
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.First">
            <summary>
            Sets the first Storage active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.Name">
            <summary>
            Sets the active Storage by Name.
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.Next">
            <summary>
            Sets the next Storage active. Returns 0 if no more.
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.idx">
            <summary>
            Get/set active Storage by index; index is 1-based: 1..count
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.puSOC">
            <summary>
            Per unit state of charge
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.State">
            <summary>
            Get/set state: 0=Idling; 1=Discharging; -1=Charging;
            
            Related enumeration: StorageStates
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.RegisterNames">
            <summary>
            Array of Names of all Storage energy meter registers
            </summary>
        </member>
        <member name="P:dss_sharp.Storages.RegisterValues">
            <summary>
            Array of values in Storage registers.
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.ActiveActor">
            <summary>
            Gets/sets the ID of the Active Actor
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.ActiveParallel">
            <summary>
            (read) Sets ON/OFF (1/0) Parallel features of the Engine
            (write) Delivers if the Parallel features of the Engine are Active
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.ActorCPU">
            <summary>
            Gets/sets the CPU of the Active Actor
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.ActorProgress">
            <summary>
            Gets the progress of all existing actors in pct
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.ActorStatus">
            <summary>
            Gets the status of each actor
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.ConcatenateReports">
            <summary>
            (read) Reads the values of the ConcatenateReports option (1=enabled, 0=disabled)
            (write) Enable/Disable (1/0) the ConcatenateReports option for extracting monitors data
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.NumCPUs">
            <summary>
            Delivers the number of CPUs on the current PC
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.NumCores">
            <summary>
            Delivers the number of Cores of the local PC
            </summary>
        </member>
        <member name="P:dss_sharp.Parallel.NumOfActors">
            <summary>
            Gets the number of Actors created
            </summary>
        </member>
        <member name="M:dss_sharp.DSS.#ctor">
             <summary>
             Expose DSS without a constructor parameters for backwards compatibility.
             This contructors always exposes the prime/default instance of OpenDSS.
            
             For creating new independent instances, use the static helper function
             <cref>NewContext</cref>.
             </summary>
        </member>
        <member name="M:dss_sharp.DSS.NewContext">
             <summary>
             Creates a new DSS engine context.
             A DSS Context encapsulates most of the global state of the original OpenDSS engine,
             allowing the user to create multiple instances in the same process. By creating contexts
             manually, the management of threads and potential issues should be handled by the user.
            
             (API Extension)
             </summary>
        </member>
        <member name="P:dss_sharp.DSS.Classes">
            <summary>
            List of DSS intrinsic classes (names of the classes)
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.DataPath">
            <summary>
            DSS Data File Path.  Default path for reports, etc. from DSS
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.DefaultEditor">
            <summary>
            Returns the path name for the default text editor.
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.NumCircuits">
            <summary>
            Number of Circuits currently defined
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.NumClasses">
            <summary>
            Number of DSS intrinsic classes
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.NumUserClasses">
            <summary>
            Number of user-defined classes
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.UserClasses">
            <summary>
            List of user-defined classes
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.Version">
            <summary>
            Get version string for the DSS.
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.AllowForms">
            <summary>
            Gets/sets whether text output is allowed
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.AllowEditor">
            <summary>
            Gets/sets whether running the external editor for "Show" is allowed
            
            AllowEditor controls whether the external editor is used in commands like "Show".
            If you set to 0 (false), the editor is not executed. Note that other side effects,
            such as the creation of files, are not affected.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.LegacyModels">
            <summary>
            LegacyModels was a flag used to toggle legacy (pre-2019) models for PVSystem, InvControl, Storage and
            StorageControl.
            In the official OpenDSS version 9.0, the old models were removed. They were temporarily present here
            but were also removed in DSS C-API v0.13.0.
            
            **NOTE**: this property will be removed for v1.0. It is left to avoid breaking the current API too soon.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.AllowChangeDir">
            <summary>
            If disabled, the engine will not change the active working directory during execution. E.g. a "compile"
            command will not "chdir" to the file path.
            
            If you have issues with long paths, enabling this might help in some scenarios.
            
            Defaults to true (allow changes, backwards compatible) in the 0.10.x versions of DSS C-API. 
            This might change to false in future versions.
            
            This can also be set through the environment variable DSS_CAPI_ALLOW_CHANGE_DIR. Set it to 0 to
            disallow changing the active working directory.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.AllowDOScmd">
            <summary>
            If enabled, the `DOScmd` command is allowed. Otherwise, an error is reported if the user tries to use it.
            
            Defaults to false (disabled state). Users should consider DOScmd deprecated on DSS-Extensions.
            
            This can also be set through the environment variable DSS_CAPI_ALLOW_DOSCMD. Setting it to 1 enables
            the command.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.COMErrorResults">
            <summary>
            If enabled, in case of errors or empty arrays, the API returns arrays with values compatible with the 
            official OpenDSS COM interface. 
            
            For example, consider the function `Loads_Get_ZIPV`. If there is no active circuit or active load element:
            - In the disabled state (COMErrorResults==false), the function will return "[]", an array with 0 elements.
            - In the enabled state (COMErrorResults==true), the function will return "[0.0]" instead. This should
            be compatible with the return value of the official COM interface.
            
            Defaults to true (enabled state) in the v0.12.x series. This will change to false in future series.
            
            This can also be set through the environment variable DSS_CAPI_COM_DEFAULTS. Setting it to 0 disables
            the legacy/COM behavior. The value can be toggled through the API at any time.
            
            (API Extension)
            </summary>
        </member>
        <member name="P:dss_sharp.DSS.CompatFlags">
             <summary>
             Controls some compatibility flags introduced to toggle some behavior from the official OpenDSS.
             
             **THESE FLAGS ARE GLOBAL, affecting all DSS engines in the process.**
             
             The current bit flags are:
             
             - NoSolverFloatChecks = 0x1 (bit 0): If enabled, don't check for NaNs in the inner solution loop. This can lead to various errors.
                 This flag is useful for legacy applications that don't handle OpenDSS API errors properly. Through the 
                 development of DSS-Extensions, we noticed this is actually a quite common issue.
            
             - BadPrecision = 0x2 (bit 1): Toggle worse precision for certain aspects of the engine. For example, 
                 the sequence-to-phase (`As2p`) and sequence-to-phase (`Ap2s`) transform matrices. On DSS C-API, 
                 we fill the matrix explicitly using higher precision, while numerical inversion of an initially 
                 worse precision matrix is used in the official OpenDSS. We will introduce better precision for 
                 other aspects of the engine in the future, so this flag can be used to toggle the old/bad values 
                 where feasible.
             - InvControl9611 = 0x4 (bit 2): Toggle some InvControl behavior introduced in OpenDSS 9.6.1.1. 
                 It could be a regression but needs further investigation, so we added this flag in the time being.
             
             These flags may change for each version of DSS C-API, but the same value will not be reused. That is,
             when we remove a compatibility flag, it will have no effect but will also not affect anything else
             besides raising an error if the user tries to toggle a flag that was available in a previous version.
             
             We expect to keep a very limited number of flags. Since the flags are more transient than the other
             options/flags, it was preferred to add this generic function instead of a separate function per
             flag.
             
             Related enumeration: DSSCompatFlags
             
             (API Extension)
             </summary>
        </member>
        <member name="T:dss_sharp.DSSException">
            <summary>
            DSSException encapsulates the error information from the
            "DSS.Error" interface.
            </summary>
        </member>
        <member name="T:dss_sharp.detail.ContextState">
            <summary>
            ContextState keeps a copy of the DSS engine instance and
            the utility class (APIUtil).
            </summary>
        </member>
        <member name="M:dss_sharp.detail.ContextState.GetContextHandle">
            <summary>
            Returns the low-level handle of the current OpenDSS/DSS-CAPI instance.
            </summary>
        </member>
        <member name="T:dss_sharp.detail.APIUtil">
            <summary>
            APIUtil provides some common functions to read data and map errors.
            Member names are kept to mirror DSS-Python and other projects.
            </summary>
        </member>
        <member name="M:dss_sharp.detail.APIUtil.CheckForError">
             <summary>
             If the exception mapping mechanism is enabled, the DSS.Error.Number code is inspected.
             If non-zero, the matching DSS.Error.Description message is read and a DSSException is
             thrown. This is called internally after most of the dss_sharp DSS C-API calls to ensure
             most engine errors are being handled as early as possible.
            
             If exceptions cannot be used, check `DSS.Error.Number` directly.
             </summary>
        </member>
    </members>
</doc>
